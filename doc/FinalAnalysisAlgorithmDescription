This algorithm simply calculates the centroid of all SNR measurements over the search area.
The centroid method was adopted from previous published signal source location approaches.
Additionally, a heuristically method is used to give some insight on how inconsistent is the prediction.
This is meant to give an idea of error of the position detected.

So we load the file: the 3 first columns correspond to GPS latitude, GPS longitude and GPS altitude. 
All the remaining columns correspond to a different collar SNR at that specific GPS location. 

During the analysis we decide whether to convert SNR back to linear or must keep it to dB scale. 
We also assessed min/max value for every column read. 
So min/max latitude, min/max longitude, etc. 
And we do what I call "Delta Calculations" in the comments, which is just getting (max-min) from each column.

We convert Latitudes and Longitude coordinates to meters using a simple formula.
For calculating the centroid we first normalize the SNR measurements to the (0-1) range. 
Then we will only consider values greater than SNR_THRES.
This centroid is basically a weighted average of each measurement, so we will accumulate it and then divide in latitude and in longitude separately.
For dealing with the latitude offset (We donâ€™t assume we're at the origin) there will be some "+ min_lon/- min_lon" on the code. 
After calculating the centroid we convert it to meters.

Then the "error" code begins.
First I calculate the max "distance from centroid". 
It consists of the distance between a given sample and the calculated centroid. 
It then sets SNR as a function of "distance from centroid" and makes a linear fit on that curve. 
For this linear fit I used L-U factorization and the code is in Portuguese, but its all modularized and separated. 

Then the error calculating will just the absolute mean squared error between the linear fit and the data. 
So it gives a sense of how the data correlates linearly. 
I.e., how well the "distance from centroid" and SNR abide to a linear relation.


